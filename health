#ifndef HEALTH_ASSISTANT_H
#define HEALTH_ASSISTANT_H

// Define necessary constants
#define MAX_NAME_LENGTH 50
#define MAX_EXERCISE_LOGS 100
#define MAX_FOOD_LOGS 100

// Define data structures
struct Profile {
    char name[MAX_NAME_LENGTH];
    int age;
    char gender;
    double weight;
    double height;
    // Add more fields related to fitness goals if needed
};

struct ExerciseLog {
    char activity[MAX_NAME_LENGTH];
    double duration; // in minutes
    double intensity;
    // Add more fields related to exercise logs if needed
};

struct FoodLog {
    char food[MAX_NAME_LENGTH];
    double calories;
    // Add more fields related to food logs if needed
};

// Function prototypes
void print_welcome_message();
void create_profile(struct Profile* profile);
void calculate_bmi(const struct Profile* profile);
void classify_health_status(double bmi);
void log_exercise(struct ExerciseLog* exercise_logs, int* num_exercise_logs);
void log_food(struct FoodLog* food_logs, int* num_food_logs);
void display_fitness_progress(const struct ExerciseLog* exercise_logs, int num_exercise_logs,
                              const struct FoodLog* food_logs, int num_food_logs);
void display_nutritional_habits(const struct FoodLog* food_logs, int num_food_logs);
void provide_exercise_recommendations(const struct Profile* profile);
void display_educational_content();
void save_profile(const struct Profile* profile);
void save_exercise_logs(const struct ExerciseLog* exercise_logs, int num_exercise_logs);
void save_food_logs(const struct FoodLog* food_logs, int num_food_logs);
int load_profile(struct Profile* profile);
int load_exercise_logs(struct ExerciseLog* exercise_logs, int* num_exercise_logs);
int load_food_logs(struct FoodLog* food_logs, int* num_food_logs);

// Function prototypes for text-based charts
void display_progress_bar(const char* title, int value, int max_value);
void display_line_chart(const char* title, const int* data, int num_data_points);
void display_pie_chart(const char** labels, const double* data, int num_data_points);

#endif // HEALTH_ASSISTANT_H

